/**
 * @file <utils.cpp>
 * @brief A couple of utility functions to detect movement and concavity.
 *
 * @author Max Moir
 * @date 21/07/2025
 */

#include <vector>
#include "utils.h"
#include <cmath>

using namespace std;

int POINT_SIZE = 6;

bool checkConcavity(vector<float> points) {
    /**
     * Determines concavity of the approximation function that will be generated by three points.
     */

    if (points.size() != POINT_SIZE) {
        return 0;
    }

    // Calculate line between two extreme points, if it passes above the middle points return false
    float gradient = (points[5] - points[1]) / (points[4] - points[0]);
    float mid = points[1] + gradient * (points[2] - points[0]);

    // This will return true for straight lines
    return points[3] >= mid;

}

bool checkMovement(vector<float> points, float threshold) {
    /**
     * Determines whether the target is moving quickly enough in the y dimension to be in flight.
     */

    if (points.size() != POINT_SIZE) {
        return 0;
    }

    float ydist = abs(points[5] - points[1]) * abs(points[5] - points[1]);
    return ydist > threshold;
}
